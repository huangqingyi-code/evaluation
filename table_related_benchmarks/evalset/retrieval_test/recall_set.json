[
  {
    "query": "What is the highest eligible free rate for K-12 students in the schools in Alameda County?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm"],
    "label_col": ["frpm.Free Meal Count (K-12)", "frpm.County Name"],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "Please list the lowest three eligible free rates for students aged 5-17 in continuation schools.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm"],
    "label_col": [
      "frpm.Free Meal Count (Ages 5-17)",
      "frpm.Educational Option Type"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "In Los Angeles how many schools have more than 500 free meals but less than 700 free or reduced price meals for K-12?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm"],
    "label_col": [
      "frpm.CDSCode",
      "frpm.County Name",
      "frpm.Free Meal Count (K-12)"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "Which school in Contra Costa has the highest number of test takers?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["satscores"],
    "label_col": ["satscores.sname", "satscores.cname", "satscores.NumTstTakr"],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the eligible free rate of the 10th and 11th schools with the highest enrolment for students in grades 1 through 12?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm"],
    "label_col": ["frpm.Free Meal Count (K-12)"],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the monthly average number of schools that opened in Alameda County under the jurisdiction of the Elementary School District in 1980?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools"],
    "label_col": [
      "schools.School",
      "schools.DOC",
      "schools.County",
      "schools.OpenDate"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the ratio of merged Unified School District schools in Orange County to merged Elementary School District schools?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools"],
    "label_col": ["schools.DOC", "schools.StatusType", "schools.County"],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "Which different county has the most number of closed schools? Please provide the name of each school as well as the closure date.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools"],
    "label_col": [
      "schools.County",
      "schools.School",
      "schools.ClosedDate",
      "schools.StatusType"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "Please specify all of the schools and their related mailing zip codes that are under Avetik Atoian's administration.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools"],
    "label_col": [
      "schools.School",
      "schools.MailZip",
      "schools.AdmFName1",
      "schools.AdmLName1"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "Of the schools with a mailing state address in California, what is the ratio of the schools located in the county of Colusa against the school located in the county of Humboldt?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools"],
    "label_col": ["schools.County", "schools.MailState"],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "Of all the schools with a mailing state address in California, how many are active in San Joaquin?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools"],
    "label_col": [
      "schools.CDSCode",
      "schools.City",
      "schools.MailState",
      "schools.StatusType"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the phone number and extension number for the school with the zip code 95203-3704? Indicate the school's name.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools"],
    "label_col": [
      "schools.Phone",
      "schools.Ext",
      "schools.School",
      "schools.Zip"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the website for the schools under the administrations of Mike Larson and Dante Alvarez?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools"],
    "label_col": ["schools.Website", "schools.AdmFName1", "schools.AdmLName1"],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What are the websites for all the partially virtual chartered schools located in San Joaquin?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools"],
    "label_col": [
      "schools.Website",
      "schools.County",
      "schools.Virtual",
      "schools.Charter"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "How many chartered schools located in the city of Hickman are owned by the Elementary School District?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools"],
    "label_col": [
      "schools.School",
      "schools.DOC",
      "schools.Charter",
      "schools.City"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "In chartered schools with charter number 00D2, what are the names of all the administrators? Include the name of the school and the city to which it belongs",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools"],
    "label_col": [
      "schools.AdmFName1",
      "schools.AdmLName1",
      "schools.School",
      "schools.City",
      "schools.Charter",
      "schools.CharterNum"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the total number of schools with a mailing city in Hickman belonging to the charter number 00D4?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools"],
    "label_col": ["schools.CharterNum", "schools.MailCity"],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the ratio in percentage of Santa Clara County schools that are locally funded compared to all other types of charter school funding?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools"],
    "label_col": ["schools.FundingType", "schools.County", "schools.Charter"],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "Between 1/1/2000 to 12/31/2005, how many directly funded schools opened in the county of Stanislaus?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools"],
    "label_col": [
      "schools.School",
      "schools.OpenDate",
      "schools.County",
      "schools.FundingType"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the total amount of Community College District closure in 1989 in the city of San Francisco?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools"],
    "label_col": [
      "schools.School",
      "schools.ClosedDate",
      "schools.City",
      "schools.DOCType"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "Which county reported the most number of school closure in the 1980s with school wonership code belonging to Youth Authority Facilities (CEA)?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools"],
    "label_col": [
      "schools.County",
      "schools.ClosedDate",
      "schools.StatusType",
      "schools.SOC",
      "schools.School"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "Please provide the National Center for Educational Statistics school district identification number for all schools with a School Ownership Code that are part of the State Special Schools.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools"],
    "label_col": ["schools.NCESDist", "schools.SOC"],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "How many active and closed District Community Day Schools are there in the county of Alpine?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools"],
    "label_col": ["schools.School", "schools.StatusType", "schools.County"],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the most common type of grade span served in the city of Adelanto?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools"],
    "label_col": ["schools.GSserved", "schools.City"],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "Between San Diego and Santa Barbara, which county offers the most number of schools that does not offer physical building? Indicate the amount.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools"],
    "label_col": ["schools.County", "schools.Virtual"],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the grade span offered in the school with the highest longitude?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools"],
    "label_col": ["schools.GSoffered", "schools.longitude"],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What are the two most common first names among the school administrators? Indicate the district to which they administer.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools"],
    "label_col": [
      "schools.schools.AdmFName1",
      "schools.schools.District",
      "schools.admfname1"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the administrator's last name that oversees the school with Charter number 40? Indicate the district, the county where the school is situated, and the name of the school.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools"],
    "label_col": [
      "schools.AdmLName1",
      "schools.District",
      "schools.County",
      "schools.School",
      "schools.CharterNum"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "The average unemployment ratio of 1995 and 1996, which one has higher percentage?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["district"],
    "label_col": ["district.A13", "district.A12"],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "List out the accounts who have the earliest trading date in 1995 ?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["trans"],
    "label_col": ["trans.account_id"],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "What is the percentage of loan amount that has been fully paid with no issue.",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["loan"],
    "label_col": ["loan.status", "loan.amount"],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "For loan amount less than USD100,000, what is the percentage of accounts that is still running with no issue.",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["loan"],
    "label_col": ["loan.status", "loan.amount"],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "List the account IDs with monthly issuance of statements.",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["account"],
    "label_col": ["account.account_id", "account.Frequency"],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "In 1996, which districts have the highest unemployment rate? List their branch location and district name.",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["district"],
    "label_col": ["district.district_id", "district.A2", "district.A13"],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "How many percent of 'Gold' cards were issued prior to 1998?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["card"],
    "label_col": ["card.card_id", "card.issued"],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "How many credit card withdrawals were recorded after 1995?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["trans"],
    "label_col": ["trans.account_id"],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "What was the difference in the number of crimes committed in East and North Bohemia in 1996?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["district"],
    "label_col": ["district.A3", "district.A16"],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "How many owner and disponent dispositions are there from account number 1 to account number 10?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["disp"],
    "label_col": ["disp.account_id"],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "What is the most common bond type?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["bond"],
    "label_col": ["bond.bond_type", "bond.bond_id"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "How many triple type bonds are there?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["bond"],
    "label_col": ["bond.bond.bond_id", "bond.bond.bond_type"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "In how many atoms is there no bromine?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["atom"],
    "label_col": ["atom.atom.atom_id", "atom.atom.element"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "Of the first 100 molecules in number order, how many are carcinogenic?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["molecule"],
    "label_col": [
      "molecule.molecule.molecule_id",
      "molecule.molecule_id",
      "molecule.molecule.label"
    ],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "Identify by their ID the molecules in which there is silicon.",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["atom"],
    "label_col": ["atom.atom.atom_id", "atom.atom.element"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["atom"],
    "label_col": ["atom.atom.element", "atom.atom.molecule_id"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "What are the atoms that are bonded in the molecule TR001 with the bond ID of TR001_2_6?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["bond"],
    "label_col": ["bond.bond.bond_id", "bond.bond.molecule_id"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "What is the difference between the number of molecules that are carcinogenic and those that are not?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["molecule"],
    "label_col": ["molecule.T.label", "molecule.T.molecule_id"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "What are the atom IDs of the bond TR_000_2_5?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["connected"],
    "label_col": ["connected.connected.atom_id", "connected.connected.bond_id"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "What are the bond IDs that have the same atom ID 2 of TR000_2?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["connected"],
    "label_col": [
      "connected.connected.bond_id",
      "connected.connected.atom_id2"
    ],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "Please list top five molecules that have double bonds in alphabetical order.",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["bond"],
    "label_col": ["bond.bond.molecule_id", "bond.bond.bond_type"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "What is the percentage of double bonds in the molecule TR008?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["bond"],
    "label_col": [
      "bond.bond.bond_type",
      "bond.bond.bond_id",
      "bond.bond.molecule_id"
    ],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "What is the percentage of molecules that are carcinogenic?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["molecule"],
    "label_col": ["molecule.T.label", "molecule.T.molecule_id"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "How much of the hydrogen in molecule TR206 is accounted for? Please provide your answer in percentage.",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["atom"],
    "label_col": [
      "atom.atom.element",
      "atom.atom.atom_id",
      "atom.atom.molecule_id"
    ],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "What is the type of bond that molecule TR000 has when involved in any bonds?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["bond"],
    "label_col": ["bond.bond.bond_type", "bond.bond.molecule_id"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "Which bond type accounted for the majority of the bonds found in molecule TR018 and state whether or not this molecule is carcinogenic?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["bond"],
    "label_col": ["bond.bond.bond_type", "bond.bond.molecule_id"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "How many molecules have a triple bond type?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["bond"],
    "label_col": ["bond.bond.molecule_id", "bond.bond.bond_type"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "How many connections does the atom 19 have?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["connected"],
    "label_col": ["connected.connected.bond_id", "connected.connected.atom_id"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "List all the elements of the toxicology of the molecule \"TR004\".",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["atom"],
    "label_col": ["atom.atom.element", "atom.atom.molecule_id"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "How many of the molecules are not carcinogenic?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["molecule"],
    "label_col": ["molecule.molecule.molecule_id", "molecule.molecule.label"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "Calculate the total atoms consisting of the element carbon and hydrogen.",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["atom"],
    "label_col": ["atom.atom.atom_id", "atom.atom.element"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "What are the labels for TR000, TR001 and TR002?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["molecule"],
    "label_col": [
      "molecule.molecule_id",
      "molecule.molecule.label",
      "molecule.molecule.molecule_id"
    ],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "List down the molecule id for non carcinogenic molecules.",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["molecule"],
    "label_col": ["molecule.molecule.molecule_id", "molecule.molecule.label"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "Calculate the total carcinogenic molecules for molecule id from TR000 to TR030.",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["molecule"],
    "label_col": ["molecule.molecule.molecule_id", "molecule.molecule.label"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "List the toxicology elements associated with molecule TR001.",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["atom"],
    "label_col": ["atom.atom.element", "atom.atom.molecule_id"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "Give me the molecule ID of the double bond type.",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["bond"],
    "label_col": ["bond.bond.molecule_id", "bond.bond.bond_type"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "Among all chemical compounds identified in the database, what percent of compounds form a triple-bond.",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["bond"],
    "label_col": ["bond.bond.bond_type", "bond.bond.bond_id"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "Among all chemical compounds that contain molecule TR047, identify the percent that form a double-bond.",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["bond"],
    "label_col": [
      "bond.bond.bond_type",
      "bond.bond.bond_id",
      "bond.bond.molecule_id"
    ],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "Is molecule TR151 carcinogenic?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["molecule"],
    "label_col": ["molecule.molecule.label", "molecule.molecule.molecule_id"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "Which toxic element can be found in the molecule TR151?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["atom"],
    "label_col": ["atom.atom.element", "atom.atom.molecule_id"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "How many chemical compounds in the database are identified as carcinogenic.",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["molecule"],
    "label_col": ["molecule.molecule.molecule_id", "molecule.molecule.label"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "Identify the atoms belong to the molecule with ID between TR010 to TR050 that contain the element carbon.",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["atom"],
    "label_col": [
      "atom.atom.atom_id",
      "atom.atom.molecule_id",
      "atom.atom.element"
    ],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "Is molecule TR124 carcinogenic?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["molecule"],
    "label_col": ["molecule.molecule.label", "molecule.molecule.molecule_id"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "What atoms comprise TR186?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["atom"],
    "label_col": ["atom.atom.atom_id", "atom.atom.molecule_id"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "What is the bond type of TR007_4_19?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["bond"],
    "label_col": ["bond.bond.bond_type", "bond.bond.bond_id"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "How many atoms belong to molecule id TR005?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["atom"],
    "label_col": ["atom.atom.atom_id", "atom.atom.molecule_id"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "How many single bonds are there in the list?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["bond"],
    "label_col": ["bond.bond.bond_id", "bond.bond.bond_type"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "What is the element of toxicology for the atom with the ID of TR000_1?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["atom"],
    "label_col": ["atom.atom.element", "atom.atom.atom_id"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "Is molecule TR000 is carcinogenic or not?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["molecule"],
    "label_col": ["molecule.label", "molecule.molecule.molecule_id"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "Find the percentage of atoms with single bond.",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["bond"],
    "label_col": ["bond.T.bond_type", "bond.T.bond_id"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "How many of the molecules are carcinogenic?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["molecule"],
    "label_col": ["molecule.molecule.molecule_id", "molecule.molecule.label"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "Among the molecules between TR004 to TR010, how many of them has single bonds?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["bond"],
    "label_col": ["bond.bond.molecule_id", "bond.bond.bond_type"],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "In the molecule TR008, how many carbons are present?",
    "table_infos": "/*\nDetails about the 'atom' dataframe that can be used as follows:\n- 'atom_id' object, is unique,  Example Values: ['TR000_1', 'TR000_2', 'TR000_3']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'element' object,  Example Values: ['cl', 'c']\n*/\n\n/*\nDetails about the 'bond' dataframe that can be used as follows:\n- 'bond_id' object, is unique,  Example Values: ['TR000_1_2', 'TR000_2_3', 'TR000_2_4']\n- 'molecule_id' object,  Example Values: ['TR000']\n- 'bond_type' object,  Example Values: ['-']\n*/\n\n/*\nDetails about the 'connected' dataframe that can be used as follows:\n- 'atom_id' object,  Example Values: ['TR000_1', 'TR000_2']\n- 'atom_id2' object, is unique,  Example Values: ['TR000_2', 'TR000_1', 'TR000_3']\n- 'bond_id' object,  Example Values: ['TR000_1_2', 'TR000_2_3']\n*/\n\n/*\nDetails about the 'molecule' dataframe that can be used as follows:\n- 'molecule_id' object, is unique,  Example Values: ['TR000', 'TR001', 'TR002']\n- 'label' object,  Example Values: ['+', '-']\n*/\n\nForeign keys:\natom.molecule id=molecule.molecule id,bond.molecule_id=molecule.molecule id,connected.bond id=bond.bond_id,connected.atom id 2=atom.atom id,connected.atom id=atom.atom id\n",
    "label_table": ["atom"],
    "label_col": [
      "atom.atom.atom_id",
      "atom.atom.molecule_id",
      "atom.atom.element"
    ],
    "table_paths": [
      "datasets/BIRD_dev-toxicology/bond.csv",
      "datasets/BIRD_dev-toxicology/molecule.csv",
      "datasets/BIRD_dev-toxicology/atom.csv",
      "datasets/BIRD_dev-toxicology/connected.csv"
    ],
    "df_names": ["bond", "molecule", "atom", "connected"]
  },
  {
    "query": "Which are the cards that have incredibly powerful foils.",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.id", "cards.cardKingdomFoilId", "cards.cardKingdomId"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "What are the borderless cards available without powerful foils?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.id", "cards.borderColor", "cards.cardKingdomId"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "List the card names with value that cost more converted mana for the face.",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.name", "cards.faceConvertedManaCost"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "Name all cards with 2015 frame style ranking below 100 on EDHRec.",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.id", "cards.edhrecRank", "cards.frameVersion"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "How many types of cards does the artist Aaron Boyd illustrated about card art?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.artist"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "What is the keyword found on card 'Angel of Mercy'?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.keywords", "cards.name"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "How many cards have infinite power?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.power"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "What type of promotion is of card 'Duress'?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.promoTypes", "cards.name"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "What is the border color of card \"Ancestor's Chosen\"?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.borderColor", "cards.name"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "What is the type of the card \"Ancestor's Chosen\" as originally printed?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.originalType", "cards.name"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "What is the percentage of borderless cards?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.borderColor", "cards.id"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "How many cards are there with toughness of 99?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.id", "cards.toughness"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "Name the cards that were illustrated by Aaron Boyd.",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.name", "cards.artist"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "How many black border cards are only available on mtgo?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.id", "cards.availability", "cards.borderColor"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "List down all the card IDs with converted mana cost of 0.",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.id", "cards.convertedManaCost"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "What are the card layout of cards with keyword of flying?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.layout", "cards.keywords"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "How many cards with original type of \"Summon - Angel\" have subtype other than \"Angel\"?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.id", "cards.originalType", "cards.subtypes"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "What are the foiled cards that are incredibly powerful when paired with non foiled cards? List the IDs.",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.id", "cards.cardKingdomId", "cards.cardKingdomFoilId"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "What are the cards belong to duel deck a? List the ID.",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.id", "cards.duelDeck"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "List the edhrecRank for cards with frame version 2015.",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.edhrecRank", "cards.frameVersion"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "On how many cards designed by John Avon is its foil non-powerful?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": [
      "cards.id",
      "cards.cardKingdomId",
      "cards.cardKingdomFoilId",
      "cards.artist"
    ],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "How many white bordered cards are powerful?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": [
      "cards.id",
      "cards.borderColor",
      "cards.cardKingdomId",
      "cards.cardKingdomFoilId"
    ],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "How many cards designed by UDON and available in mtgo print type has a starting maximum hand size of -1?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": [
      "cards.id",
      "cards.hAND",
      "cards.artist",
      "cards.Availability"
    ],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "How many cards with a 1993 frame version and available on paper have a sensitive content warning?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": [
      "cards.id",
      "cards.frameVersion",
      "cards.availability",
      "cards.hasContentWarning"
    ],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": [
      "cards.manaCost",
      "cards.availability",
      "cards.borderColor",
      "cards.frameVersion",
      "cards.layout"
    ],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "How much unconverted mana do all the cards created by Rob Alexander cost in total?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.manaCost", "cards.artist"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "Lists all types of cards available in arena.",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.subtypes", "cards.supertypes", "cards.availability"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "Lists the set code of all cards translated into Spanish.",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["set_translations"],
    "label_col": ["set_translations.setCode"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "What percentage of legendary frame effect cards have a maximum starting maximun hand\nsize of +3?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.hAND", "cards.id", "cards.frameEffects"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "What is the percentage of Story Spotlight cards that also have a text box? List them by their ID.",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.isTextless", "cards.id", "cards.isStorySpotlight"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "What kind of printing is on the card that Daren Bader created?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.availability", "cards.artist"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "How many color cards with no borders have been ranked higher than 12000 on EDHRec?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.id", "cards.edhrecRank", "cards.borderColor"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "How many cards are oversized, reprinted, and printed for promotions?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": [
      "cards.id",
      "cards.isOversized",
      "cards.isReprint",
      "cards.isPromo"
    ],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "Please list top three unknown power cards that have promotional types for arena league in alphabetical order.",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.name", "cards.power", "cards.promoTypes"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "What is the language of the card with the multiverse number 149934?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["foreign_data"],
    "label_col": ["foreign_data.multiverseid"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "Please provide the ids of top three powerful pairs of Kingdom Foil and Kingdom Cards sorted by Kingdom Foil id in alphabetical order.",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.cardKingdomFoilId", "cards.cardKingdomId"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "What proportion of cards do not have a text box with a normal layout?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.isTextless", "cards.layout"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "What are the card numbers that don't have multiple faces on a single card and have the subtypes Angel and Wizard?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.id", "cards.subtypes", "cards.side"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "Please provide top three sets that don't appear in Magic: The Gathering Online, along with their names in in alphabetical order.",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["sets"],
    "label_col": ["sets.name", "sets.mtgoCode"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "How many card border with black color ? List out the card id.",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.id", "cards.borderColor"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "How many cards have frame effect as extendedart? List out the id of those cards.",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.id", "cards.frameEffects"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "Among black card borders, which card has full artwork?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.id", "cards.borderColor", "cards.isFullArt"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "Point out the language of set id \"174\"?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["set_translations"],
    "label_col": ["set_translations.id"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "List out the set name of the set code \"ALL\".",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["sets"],
    "label_col": ["sets.name", "sets.code"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "Which foreign language used by \"A Pedra Fellwar\"?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["foreign_data"],
    "label_col": ["foreign_data.name"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "Of all the cards that are designed by Aaron Miller, how many of them are incredibly powerful?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": [
      "cards.artist",
      "cards.cardKingdomFoilId",
      "cards.cardKingdomId"
    ],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "How many cards available in paper have a positive starting maximum hand size?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.availability", "cards.hAND"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "Please list the names of the cards that have a text box.",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.name", "cards.isTextless"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "What's the unconverted mana cost of the card \"Ancestor's Chosen\"?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.manaCost", "cards.name"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "Among the cards with a white border color, how many of them have unknown power?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.power", "cards.borderColor"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "Which of the cards that are a promotional painting have multiple faces on the same card? Please list their names.",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.name", "cards.isPromo", "cards.side"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "What's the list of all types for the card \"Molimo, Maro-Sorcerer\"?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.subtypes", "cards.supertypes", "cards.name"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "Please list the websites where I can purchase the cards that have the promotional type of \"bundle\".",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.purchaseUrls", "cards.promoTypes"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "How many artists have designed a card with a black border color and is available in both \"arena\" and \"mtgo\" printing type?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.availability"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "Which card costs more converted mana, \"Serra Angel\" or \"Shrine Keeper\"?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.name", "cards.convertedManaCost"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "Which artist designed the card whose promotional name is \"Battra, Dark Destroyer\"?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.artist", "cards.flavorName"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "Please list the names of the top 3 cards with the highest converted mana cost and have a 2003 card frame style.",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": [
      "cards.name",
      "cards.frameVersion",
      "cards.convertedManaCost"
    ],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "What's the code for the set which was released on 2017/7/14?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["sets"],
    "label_col": ["sets.code", "sets.releaseDate"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "List the keyrune code for the set whose code is 'PKHC'.",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["sets"],
    "label_col": ["sets.keyruneCode", "sets.code"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "For the set which had 'SS2' as the code, what is its magic card market id?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["sets"],
    "label_col": ["sets.mcmId", "sets.code"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "What's the magic card market name for the set which was released on 2017/6/9?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["sets"],
    "label_col": ["sets.mcmName", "sets.releaseDate"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "For the set \"From the Vault: Lore\", what is its expansion type?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["sets"],
    "label_col": ["sets.name"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "For the set \"Commander 2014 Oversized\" , give its parent code.",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["sets"],
    "label_col": ["sets.parentCode", "sets.name"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "What are the available printing types of the cards that doesn't have a text box created by Aleksi Briclot?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.availability", "cards.artist", "cards.isTextless"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "What is the unique id of the set that has the highest number of cards?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["sets"],
    "label_col": ["sets.id", "sets.baseSetSize"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "Among the cards that doesn't have multiple faces on the same card, who is the illustrator of the card art that has the highest cost of converted mana?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.artist", "cards.side", "cards.convertedManaCost"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "What is the most common visual frame effects among the incredibly powerful foils?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": [
      "cards.frameEffects",
      "cards.cardKingdomFoilId",
      "cards.cardKingdomId"
    ],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "How many cards with unknown power that can't be found in foil is in duel deck A?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.power", "cards.hasFoil", "cards.duelDeck"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["sets"],
    "label_col": ["sets.id", "sets.totalSetSize"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "List the artists who illustrated cards with black borders which are available only in arena.",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.artist", "cards.availability", "cards.BorderColor"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "Find the uuid of cards in which the old school format is restricted or banned.",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["legalities"],
    "label_col": ["legalities.format", "legalities.status"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "Among the card designed by Matthew D. Wilson, how many are available only in the paper?",
    "table_infos": "/*\nDetails about the 'cards' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'artist' object, is unique,  Example Values: ['Pete Venters', 'Volkan Baǵa', 'Justin Sweet']\n- 'asciiName' float64, contains NaN,  Example Values: []\n- 'availability' object,  Example Values: ['mtgo,paper']\n- 'borderColor' object,  Example Values: ['black']\n- 'cardKingdomFoilId' float64, contains NaN,  Example Values: []\n- 'cardKingdomId' int64,  Example Values: [122719, 122720, 122725]\n- 'colorIdentity' object,  Example Values: ['W']\n- 'colorIndicator' float64, contains NaN,  Example Values: []\n- 'colors' object,  Example Values: ['W']\n- 'convertedManaCost' float64,  Example Values: [7.0, 5.0, 4.0]\n- 'duelDeck' float64, contains NaN,  Example Values: []\n- 'edhrecRank' float64,  Example Values: [15650.0, 12702.0, 11081.0]\n- 'faceConvertedManaCost' float64, contains NaN,  Example Values: []\n- 'faceName' float64, contains NaN,  Example Values: []\n- 'flavorName' float64, contains NaN,  Example Values: []\n- 'flavorText' object, contains NaN,  Example Values: ['Every tear shed is a drop of immortality....']\n- 'frameEffects' float64, contains NaN,  Example Values: []\n- 'frameVersion' int64,  Example Values: [2003]\n- 'hand' float64, contains NaN,  Example Values: []\n- 'hasAlternativeDeckLimit' int64,  Example Values: [0]\n- 'hasContentWarning' int64,  Example Values: [0]\n- 'hasFoil' int64,  Example Values: [0]\n- 'hasNonFoil' int64,  Example Values: [1]\n- 'isAlternative' int64,  Example Values: [0]\n- 'isFullArt' int64,  Example Values: [0]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isOversized' int64,  Example Values: [0]\n- 'isPromo' int64,  Example Values: [0]\n- 'isReprint' int64,  Example Values: [1]\n- 'isReserved' int64,  Example Values: [0]\n- 'isStarter' int64,  Example Values: [0]\n- 'isStorySpotlight' int64,  Example Values: [0]\n- 'isTextless' int64,  Example Values: [0]\n- 'isTimeshifted' int64,  Example Values: [0]\n- 'keywords' object,  Example Values: ['First strike', 'Flying']\n- 'layout' object,  Example Values: ['normal']\n- 'leadershipSkills' float64, contains NaN,  Example Values: []\n- 'life' float64, contains NaN,  Example Values: []\n- 'loyalty' float64, contains NaN,  Example Values: []\n- 'manaCost' object, is unique,  Example Values: ['{5}{W}{W}', '{4}{W}', '{3}{W}']\n- 'mcmId' int64,  Example Values: [16165, 16166, 16171]\n- 'mcmMetaId' int64,  Example Values: [156, 176, 368]\n- 'mtgArenaId' float64, contains NaN,  Example Values: []\n- 'mtgjsonV4Id' object, is unique,  Example Values: ['ad41be73-582f-58ed-abd4-a88c1f616ac3', '9eb2e54c-a12b-5e88-a9c0-d8c84c52d59c', 'c0de6fd8-367a-50fb-b2f4-2b8fa5aeb7d9']\n- 'mtgoFoilId' int64,  Example Values: [27501, 26993, 27473]\n- 'mtgoId' int64,  Example Values: [27500, 26992, 27472]\n- 'multiverseId' int64,  Example Values: [130550, 129465, 129470]\n- 'name' object, is unique,  Example Values: [\"Ancestor's Chosen\", 'Angel of Mercy', 'Aven Cloudchaser']\n- 'number' int64,  Example Values: [1, 2, 7]\n- 'originalReleaseDate' float64, contains NaN,  Example Values: []\n- 'originalText' object, is unique,  Example Values: ['First strike (This creature deals combat....', \"Flying (This creature can't be blocked e....\", \"Flying (This creature can't be blocked e....\"]\n- 'originalType' object, is unique,  Example Values: ['Creature - Human Cleric', 'Creature - Angel', 'Creature - Bird Soldier']\n- 'otherFaceIds' float64, contains NaN,  Example Values: []\n- 'power' int64,  Example Values: [4, 3, 2]\n- 'printings' object, is unique,  Example Values: ['10E,JUD,UMA', '10E,8ED,9ED,DDC,DVD,IMA,INV,JMP,MB1,P02,....', '10E,8ED,9ED,ODY']\n- 'promoTypes' float64, contains NaN,  Example Values: []\n- 'purchaseUrls' object, is unique,  Example Values: [\"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\", \"{'cardKingdom': 'https://mtgjson.com/lin....\"]\n- 'rarity' object,  Example Values: ['uncommon', 'common']\n- 'scryfallId' object, is unique,  Example Values: ['7a5cd03c-4227-4551-aa4b-7d119f0468b5', '8f7980d4-da43-4d6d-ad16-14b8a34ae91d', '407110e9-19af-4ff5-97b2-c03225031a73']\n- 'scryfallIllustrationId' object, is unique,  Example Values: ['be2f7173-c8b7-4172-a388-9b2c6b3c16e5', 'e4d6c53f-e936-4be8-8b70-47c2be863b20', '2eb663cd-020a-46d8-a6d9-bb63d4b5c848']\n- 'scryfallOracleId' object, is unique,  Example Values: ['fc2ccab7-cab1-4463-b73d-898070136d74', 'a2daaf32-dbfe-4618-892e-0da24f63a44a', '48bda7dd-d023-41e8-8c28-e0cfda0d07ca']\n- 'setCode' object,  Example Values: ['10E']\n- 'side' float64, contains NaN,  Example Values: []\n- 'subtypes' object, is unique,  Example Values: ['Human,Cleric', 'Angel', 'Bird,Soldier']\n- 'supertypes' float64, contains NaN,  Example Values: []\n- 'tcgplayerProductId' int64,  Example Values: [15032, 15033, 15045]\n- 'text' object, is unique,  Example Values: ['First strike (This creature deals combat....', 'Flying\\nWhen Angel of Mercy enters the ba....', \"Flying (This creature can't be blocked e....\"]\n- 'toughness' int64,  Example Values: [4, 3, 2]\n- 'type' object, is unique,  Example Values: ['Creature — Human Cleric', 'Creature — Angel', 'Creature — Bird Soldier']\n- 'types' object,  Example Values: ['Creature']\n- 'uuid' object, is unique,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c', '57aaebc1-850c-503d-9f6e-bb8d00d8bf7c', '8ac972b5-9f6e-5cc8-91c3-b9a40a98232e']\n- 'variations' object, is unique,  Example Values: ['b7c19924-b4bf-56fc-aa73-f586e940bd42', '8fd4e2eb-3eb4-50ea-856b-ef638fa47f8a', '6adaf14d-43e3-521a-adf1-960c808e5b1a']\n- 'watermark' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'foreign_data' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'flavorText' object, is unique,  Example Values: ['„Es ist der Wille aller, und meine Hand,....', '\"La voluntad de todos, realizada por mi ....', '« La volonté de tous passe par ma main. ....']\n- 'language' object, is unique,  Example Values: ['German', 'Spanish', 'French']\n- 'multiverseid' float64,  Example Values: [148411.0, 150317.0, 149934.0]\n- 'name' object, is unique,  Example Values: ['Ausgewählter der Ahnfrau', 'Elegido de la Antepasada', \"Élu de l'Ancêtre\"]\n- 'text' object, is unique,  Example Values: ['Erstschlag (Diese Kreatur fügt Kampfscha....', 'Daña primero. (Esta criatura hace daño d....', 'Initiative (Cette créature inflige des b....']\n- 'type' object, is unique,  Example Values: ['Kreatur — Mensch, Kleriker', 'Criatura — Clérigo humano', 'Créature : humain et clerc']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'legalities' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'format' object, is unique,  Example Values: ['commander', 'duel', 'legacy']\n- 'status' object,  Example Values: ['Legal']\n- 'uuid' object,  Example Values: ['5f8287b1-5bb6-5f4c-ad17-316a40d5bb0c']\n*/\n\n/*\nDetails about the 'sets' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'baseSetSize' int64,  Example Values: [383, 302, 332]\n- 'block' object, contains NaN,  Example Values: ['Core Set']\n- 'booster' object, is unique,  Example Values: [\"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\", \"{'default': {'boosters': [{'contents': {....\"]\n- 'code' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'isFoilOnly' int64,  Example Values: [0]\n- 'isForeignOnly' int64,  Example Values: [0]\n- 'isNonFoilOnly' int64,  Example Values: [0, 1]\n- 'isOnlineOnly' int64,  Example Values: [0]\n- 'isPartialPreview' int64,  Example Values: [0]\n- 'keyruneCode' object, is unique,  Example Values: ['10E', '2ED', '2XM']\n- 'mcmId' float64, contains NaN,  Example Values: [74.0, 3204.0]\n- 'mcmIdExtras' float64, contains NaN,  Example Values: [3209.0]\n- 'mcmName' object, contains NaN,  Example Values: ['Tenth Edition', 'Double Masters']\n- 'mtgoCode' object, contains NaN,  Example Values: ['10E', '2XM']\n- 'name' object, is unique,  Example Values: ['Tenth Edition', 'Unlimited Edition', 'Double Masters']\n- 'parentCode' float64, contains NaN,  Example Values: []\n- 'releaseDate' object, is unique,  Example Values: ['2007-07-13', '1993-12-01', '2020-08-07']\n- 'tcgplayerGroupId' float64,  Example Values: [1.0, 115.0, 2655.0]\n- 'totalSetSize' int64,  Example Values: [508, 302, 384]\n- 'type' object,  Example Values: ['core', 'masters']\n*/\n\n/*\nDetails about the 'set_translations' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'language' object, is unique,  Example Values: ['Chinese Simplified', 'Chinese Traditional', 'French']\n- 'setCode' object,  Example Values: ['10E']\n- 'translation' object,  Example Values: ['核心系列第十版', 'Dixième édition']\n*/\n\n/*\nDetails about the 'ruling' dataframe that can be used as follows:\n- 'id' int64,  Example Values: [1, 2, 3]\n- 'date' object,  Example Values: ['2007-07-15', '2007-02-01']\n- 'text' object, is unique,  Example Values: ['You draw the card when Bandage resolves,....', 'If you double a negative life total, you....', 'Beacon of Immortality’s effect counts as....']\n- 'uuid' object,  Example Values: ['6d268c95-c176-5766-9a46-c14f739aba1c', '56f4935b-f6c5-59b9-88bf-9bcce20247ce']\n*/\n\nForeign keys:\nforeign_data.uuid=cards.uuid,legalities.uuid=cards.uuid,set_translations.set code=sets.code,ruling.uuid=cards.uuid\n",
    "label_table": ["cards"],
    "label_col": ["cards.id", "cards.artist", "cards.availability"],
    "table_paths": [
      "datasets/BIRD_dev-card_games/ruling.csv",
      "datasets/BIRD_dev-card_games/legalities.csv",
      "datasets/BIRD_dev-card_games/cards.csv",
      "datasets/BIRD_dev-card_games/rulings.csv",
      "datasets/BIRD_dev-card_games/sqlite_sequence.csv",
      "datasets/BIRD_dev-card_games/set_translations.csv",
      "datasets/BIRD_dev-card_games/sets.csv",
      "datasets/BIRD_dev-card_games/foreign_data.csv"
    ],
    "df_names": [
      "ruling",
      "legalities",
      "cards",
      "rulings",
      "sqlite_sequence",
      "set_translations",
      "sets",
      "foreign_data"
    ]
  },
  {
    "query": "Which user has a higher reputation, Harlan or Jarrod Dixon?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["users"],
    "label_col": ["users.DisplayName", "users.Reputation"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "Please list the display names of all the users whose accounts were created in the year 2014.",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["users"],
    "label_col": ["users.DisplayName", "users.CreationDate"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "How many users last accessed the website after 2014/9/1?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["users"],
    "label_col": ["users.Id", "users.LastAccessDate"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "What is the display name of the user who has the most number of views?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["users"],
    "label_col": ["users.DisplayName"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "Among the users who have more than 100 upvotes, how many of them have more then 1 downvotes?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["users"],
    "label_col": ["users.Id", "users.Upvotes", "users.Downvotes"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "How many users with more than 10 views created their account after the year 2013?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["users"],
    "label_col": ["users.id", "users.CreationDate"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "How many votes did the user No.58 take on 2010/7/19?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["votes"],
    "label_col": ["votes.Id", "votes.UserId", "votes.CreationDate"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "Indicate the creation date of the maximum number of votes.",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["votes"],
    "label_col": ["votes.CreationDate", "votes.Id"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "Give the number of \"Revival\" badges.",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["badges"],
    "label_col": ["badges.Id", "badges.Name"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "How many views did the post titled 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer' get?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["posts"],
    "label_col": ["posts.ViewCount", "posts.Title"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "Write the contents of comments with a score of 17.",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["comments"],
    "label_col": ["comments.Score"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "Which user has the website URL listed at 'http://stackoverflow.com'",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["users"],
    "label_col": ["users.DisplayName", "users.WebsiteUrl"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "Give the total number of comments posted by user ID 13.",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["comments"],
    "label_col": ["comments.Id", "comments.UserId"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "Which user ID has the highest reputation?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["users"],
    "label_col": ["users.Id", "users.Reputation"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "Which user ID has the lowest view?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["users"],
    "label_col": ["users.Id"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "How many users are awarded with supporter badge during year 2011?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["badges"],
    "label_col": ["badges.Id", "badges.Name"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "How many users are awarded with more than 5 badges?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["badges"],
    "label_col": ["badges.UserId", "badges.Name"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "What is the percentage difference of student badges given during 2010 and 2011?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["badges"],
    "label_col": ["badges.Id", "badges.Name"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "How many users obtained the \"Announcer\" badge?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["badges"],
    "label_col": ["badges.id", "badges.Name"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "List out the name of badges that users obtained on 7/19/2010 7:39:08 PM.",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["badges"],
    "label_col": ["badges.Name"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "How many positive comments are there on the list?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["comments"],
    "label_col": ["comments.id", "comments.score"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "State the detailed content of the comment which was created on 7/19/2010 7:25:47 PM.",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["comments"],
    "label_col": ["comments.CreationDate"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "How many posts have a score of 10 on the list?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["posts"],
    "label_col": ["posts.id", "posts.Score"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "What is the name of user with the ID of 30?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["users"],
    "label_col": ["users.DisplayName", "users.Id"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "How many users were from New York?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["users"],
    "label_col": ["users.Id"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "How many votes were made in 2010?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["votes"],
    "label_col": ["votes.id", "votes.CreationDate"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "How many users were adult?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["users"],
    "label_col": ["users.id", "users.Age"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "Which users have the highest number of views?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["users"],
    "label_col": ["users.Id", "users.DisplayName"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "Calculate the ratio of votes in 2010 and 2011.",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["votes"],
    "label_col": ["votes.CreationDate"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "How many users received commentator badges in 2014?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["badges"],
    "label_col": ["badges.Id", "badges.Name"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "How many posts were created on 21st July, 2010?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["postHistory"],
    "label_col": ["postHistory.id", "postHistory.CreationDate"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "What are the display names and ages of user who got the highest in views?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["users"],
    "label_col": ["users.DisplayName", "users.Age"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "Provide the last edit date and last edit user ID for the post \"Detecting a given face in a database of facial images\".",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["posts"],
    "label_col": [
      "posts.LastEditDate",
      "posts.LastEditorUserId",
      "posts.Title"
    ],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "How many negative comments were given by user ID 13?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["comments"],
    "label_col": ["comments.Id", "comments.UserId", "comments.Score"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "What are the titles of the top 5 posts with the highest popularity?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["posts"],
    "label_col": ["posts.Title", "posts.ViewCount"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "How many tags have post count between 5,000 to 7,000?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["tags"],
    "label_col": ["tags.Id"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "What is the owner user id of the most valuable post?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["posts"],
    "label_col": ["posts.OwnerUserId", "posts.FavoriteCount"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "How old is the most influential user?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["users"],
    "label_col": ["users.Age", "users.Reputation"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "What is the id of the youngest user?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["users"],
    "label_col": ["users.Id", "users.Age"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "Who has the highest reputation? Please give the display name.",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["users"],
    "label_col": ["users.DisplayName", "users.Reputation"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "How many users whose reputations are higher than 2000 and the number of views is higher than 1000?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["users"],
    "label_col": ["users.id", "users.Reputation"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "Please list all display names of users who are adults.",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["users"],
    "label_col": ["users.DisplayName", "users.Age"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "Identify the percentage of teenage users.",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["users"],
    "label_col": ["users.Age", "users.Id"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "Identify the total number of posts with views above average.",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["posts"],
    "label_col": ["posts.Id", "posts.ViewCount"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "Identify the number of posts that have been viewed over 35000 times but have received no comments from other users.",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["posts"],
    "label_col": ["posts.Id", "posts.ViewCount", "posts.CommentCount"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "Identify the number of adult users who have cast over 5000 upvotes.",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["users"],
    "label_col": ["users.Id", "users.Age", "users.UpVotes"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "How many users were awarded with 'Citizen Patrol' badge?",
    "table_infos": "/*\nDetails about the 'badges' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'UserId' int64,  Example Values: [5, 6, 8]\n- 'Name' object,  Example Values: ['Teacher']\n- 'Date' object,  Example Values: ['2010-07-19 19:39:07.0']\n*/\n\n/*\nDetails about the 'comments' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 5, 9]\n- 'Score' int64,  Example Values: [5, 0]\n- 'Text' object, is unique,  Example Values: ['Could be a poster child fo argumentative....', \"Yes, R is nice- but WHY is it 'valuable'....\", 'Again- why?  How would I convince my bos....']\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0', '2010-07-19 19:18:54.0']\n- 'UserId' float64,  Example Values: [13.0]\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postHistory' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostHistoryTypeId' int64,  Example Values: [2, 1, 3]\n- 'PostId' int64,  Example Values: [1]\n- 'RevisionGUID' object,  Example Values: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69']\n- 'CreationDate' object,  Example Values: ['2010-07-19 19:12:12.0']\n- 'UserId' float64,  Example Values: [8.0]\n- 'Text' object, is unique,  Example Values: ['How should I elicit prior distributions ....', 'Eliciting priors from experts', '<bayesian><prior><elicitation>']\n- 'Comment' float64, contains NaN,  Example Values: []\n- 'UserDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'postLinks' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [108, 145, 217]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0', '2010-07-26 20:12:15.0']\n- 'PostId' int64,  Example Values: [395, 548, 375]\n- 'RelatedPostId' int64,  Example Values: [173, 539, 30]\n- 'LinkTypeId' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'posts' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostTypeId' int64,  Example Values: [1]\n- 'AcceptedAnswerId' float64,  Example Values: [15.0, 59.0, 5.0]\n- 'CreaionDate' object, is unique,  Example Values: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0', '2010-07-19 19:13:28.0']\n- 'Score' int64,  Example Values: [23, 22, 54]\n- 'ViewCount' float64,  Example Values: [1278.0, 8198.0, 3613.0]\n- 'Body' object, is unique,  Example Values: ['<p>How should I elicit prior distributio....', '<p>In many different statistical methods....', '<p>What are some valuable Statistical An....']\n- 'OwnerUserId' float64,  Example Values: [8.0, 24.0, 18.0]\n- 'LasActivityDate' object, is unique,  Example Values: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0', '2013-05-27 14:48:36.0']\n- 'Title' object, is unique,  Example Values: ['Eliciting priors from experts', 'What is normality?', 'What are some valuable Statistical Analy....']\n- 'Tags' object, is unique,  Example Values: ['<bayesian><prior><elicitation>', '<distributions><normality>', '<software><open-source>']\n- 'AnswerCount' float64,  Example Values: [5.0, 7.0, 19.0]\n- 'CommentCount' int64,  Example Values: [1, 4]\n- 'FavoriteCount' float64,  Example Values: [14.0, 8.0, 36.0]\n- 'LastEditorUserId' float64, contains NaN,  Example Values: [88.0, 183.0]\n- 'LastEditDate' object, contains NaN,  Example Values: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']\n- 'CommunityOwnedDate' object, contains NaN,  Example Values: ['2010-07-19 19:13:28.0']\n- 'ParentId' float64, contains NaN,  Example Values: []\n- 'ClosedDate' float64, contains NaN,  Example Values: []\n- 'OwnerDisplayName' float64, contains NaN,  Example Values: []\n- 'LastEditorDisplayName' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'tags' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'TagName' object, is unique,  Example Values: ['bayesian', 'prior', 'elicitation']\n- 'Count' int64,  Example Values: [1342, 168, 6]\n- 'ExcerptPostId' float64, contains NaN,  Example Values: [20258.0, 62158.0]\n- 'WikiPostId' float64, contains NaN,  Example Values: [20257.0, 62157.0]\n*/\n\n/*\nDetails about the 'users' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [-1, 2, 3]\n- 'Reputation' int64,  Example Values: [1, 101]\n- 'CreationDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0', '2010-07-19 15:34:50.0']\n- 'DisplayName' object, is unique,  Example Values: ['Community', 'Geoff Dalgas', 'Jarrod Dixon']\n- 'LastAccessDate' object, is unique,  Example Values: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0', '2014-08-08 06:42:58.0']\n- 'WebsiteUrl' object,  Example Values: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']\n- 'Location' object, is unique,  Example Values: ['on the server farm', 'Corvallis, OR', 'New York, NY']\n- 'AboutMe' object, is unique,  Example Values: [\"<p>Hi, I'm not really a person.</p>\\n\\n<p>....\", '<p>Developer on the StackOverflow team. ....', '<p><a href=\"http://blog.stackoverflow.co....']\n- 'Views' int64,  Example Values: [0, 25, 22]\n- 'UpVotes' int64,  Example Values: [5007, 3, 19]\n- 'DownVotes' int64,  Example Values: [1920, 0]\n- 'AccountId' int64,  Example Values: [-1, 2, 3]\n- 'Age' float64, contains NaN,  Example Values: [37.0, 35.0]\n- 'ProfileImageUrl' float64, contains NaN,  Example Values: []\n*/\n\n/*\nDetails about the 'votes' dataframe that can be used as follows:\n- 'Id' int64,  Example Values: [1, 2, 3]\n- 'PostId' int64,  Example Values: [3, 2, 5]\n- 'VoteTypeId' int64,  Example Values: [2]\n- 'CreationDate' object,  Example Values: ['2010-07-19']\n- 'UserId' float64, contains NaN,  Example Values: []\n- 'BountyAmount' float64, contains NaN,  Example Values: []\n*/\n\nForeign keys:\nbadges.User Id=users.Id,comments.User Id=users.Id,comments.Post Id=posts.Id,postHistory.User Id=users.Id,postHistory.Post Id=posts.Id,postLinks.Related Post Id=posts.Id,postLinks.Post Id=posts.Id,posts.ParentId=posts.Id,posts.Owner User Id=users.Id,posts.Last Editor User Id=users.Id,tags.Excerpt Post Id=posts.Id,votes.User Id=users.Id,votes.Post Id=posts.Id\n",
    "label_table": ["badges"],
    "label_col": ["badges.id", "badges.Name"],
    "table_paths": [
      "datasets/BIRD_dev-codebase_community/postlinks.csv",
      "datasets/BIRD_dev-codebase_community/posthistory.csv",
      "datasets/BIRD_dev-codebase_community/badges.csv",
      "datasets/BIRD_dev-codebase_community/posts.csv",
      "datasets/BIRD_dev-codebase_community/users.csv",
      "datasets/BIRD_dev-codebase_community/tags.csv",
      "datasets/BIRD_dev-codebase_community/votes.csv",
      "datasets/BIRD_dev-codebase_community/comments.csv"
    ],
    "df_names": [
      "postlinks",
      "posthistory",
      "badges",
      "posts",
      "users",
      "tags",
      "votes",
      "comments"
    ]
  },
  {
    "query": "Please list the zip code of all the charter schools in Fresno County Office of Education.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "schools"],
    "label_col": [
      "schools.Zip",
      "frpm.CDSCode",
      "schools.CDSCode",
      "frpm.District Name",
      "frpm.Charter School (Y/N)"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the unabbreviated mailing address of the school with the highest FRPM count for K-12 students?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "schools"],
    "label_col": [
      "schools.MailStreet",
      "frpm.CDSCode",
      "schools.CDSCode",
      "frpm.FRPM Count (K-12)"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "Please list the phone numbers of the direct charter-funded schools that are opened after 2000/1/1.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "schools"],
    "label_col": [
      "schools.Phone",
      "frpm.CDSCode",
      "schools.CDSCode",
      "frpm.Charter Funding Type",
      "frpm.Charter School (Y/N)",
      "schools.OpenDate"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "How many schools with an average score in Math under 400 in the SAT test are exclusively virtual?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["satscores", "schools"],
    "label_col": [
      "schools.School",
      "satscores.cds",
      "schools.CDSCode",
      "schools.Virtual",
      "satscores.AvgScrMath"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "Among the schools with the SAT test takers of over 500, please list the schools that are magnet schools or offer a magnet program.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["satscores", "schools"],
    "label_col": [
      "schools.School",
      "satscores.cds",
      "schools.CDSCode",
      "schools.Magnet",
      "satscores.NumTstTakr"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the phone number of the school that has the highest number of test takers with an SAT score of over 1500?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["satscores", "schools"],
    "label_col": [
      "schools.Phone",
      "satscores.cds",
      "schools.CDSCode",
      "satscores.NumGE1500"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "Among the schools with the average score in Math over 560 in the SAT test, how many schools are directly charter-funded?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["satscores", "frpm"],
    "label_col": [
      "frpm.School Code",
      "satscores.cds",
      "frpm.CDSCode",
      "satscores.AvgScrMath",
      "frpm.Charter Funding Type"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "For the school with the highest average score in Reading in the SAT test, what is its FRPM count for students aged 5-17?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["satscores", "frpm"],
    "label_col": [
      "frpm.FRPM Count (Ages 5-17)",
      "satscores.cds",
      "frpm.CDSCode",
      "satscores.AvgScrRead"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "Please list the codes of the schools with a total enrollment of over 500.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools", "frpm"],
    "label_col": [
      "frpm.CDSCode",
      "schools.CDSCode",
      "frpm.Enrollment (K-12)",
      "frpm.Enrollment (Ages 5-17)"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "Among the schools with an SAT excellence rate of over 0.3, what is the highest eligible free rate for students aged 5-17?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "satscores"],
    "label_col": [
      "frpm.Free Meal Count (Ages 5-17)",
      "frpm.Enrollment (Ages 5-17)",
      "frpm.CDSCode",
      "satscores.cds",
      "satscores.NumGE1500",
      "satscores.NumTstTakr"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "Please list the phone numbers of the schools with the top 3 SAT excellence rate.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools", "satscores"],
    "label_col": [
      "schools.Phone",
      "schools.CDSCode",
      "satscores.cds",
      "satscores.NumGE1500",
      "satscores.NumTstTakr"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "List the top five schools, by descending order, from the highest to the lowest, the most number of Enrollment (Ages 5-17). Please give their NCES school identification number.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools", "frpm"],
    "label_col": [
      "schools.NCESSchool",
      "schools.CDSCode",
      "frpm.CDSCode",
      "frpm.Enrollment (Ages 5-17)"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "Which active district has the highest average score in Reading?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools", "satscores"],
    "label_col": [
      "schools.District",
      "schools.CDSCode",
      "satscores.cds",
      "schools.StatusType",
      "satscores.AvgScrRead"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "How many schools in merged Alameda have number of test takers less than 100?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools", "satscores"],
    "label_col": [
      "schools.CDSCode",
      "satscores.cds",
      "schools.StatusType",
      "satscores.NumTstTakr",
      "schools.County"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the charter number of the school that the average score in Writing is 499?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools", "satscores"],
    "label_col": [
      "schools.CharterNum",
      "schools.CDSCode",
      "satscores.cds",
      "satscores.AvgScrWrite"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "How many schools in Contra Costa (directly funded) have number of test takers not more than 250?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "satscores"],
    "label_col": [
      "frpm.CDSCode",
      "satscores.cds",
      "frpm.Charter Funding Type",
      "frpm.County Name",
      "satscores.NumTstTakr"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the phone number of the school that has the highest average score in Math?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools", "satscores"],
    "label_col": [
      "schools.Phone",
      "schools.CDSCode",
      "satscores.cds",
      "satscores.AvgScrMath"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "How many schools in Amador which the Low Grade is 9 and the High Grade is 12?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "schools"],
    "label_col": [
      "frpm.School Name",
      "frpm.CDSCode",
      "schools.CDSCode",
      "schools.County",
      "frpm.Low Grade",
      "frpm.High Grade"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "List the names of schools with more than 30 difference in enrollements between K-12 and ages 5-17? Please also give the full street adress of the schools.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools", "frpm"],
    "label_col": [
      "schools.School",
      "schools.StreetAbr",
      "schools.CDSCode",
      "frpm.CDSCode",
      "frpm.Enrollment (K-12)",
      "frpm.Enrollment (Ages 5-17)"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "Give the names of the schools with the percent eligible for free meals in K-12 is more than 0.1 and test takers whose test score is greater than or equal to 1500?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["satscores", "frpm"],
    "label_col": [
      "frpm.School Name",
      "satscores.cds",
      "frpm.CDSCode",
      "frpm.Free Meal Count (K-12)",
      "frpm.Enrollment (K-12)",
      "satscores.NumGE1500"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "Name schools in Riverside which the average of average math score for SAT is grater than 400, what is the funding type of these schools?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["satscores", "frpm"],
    "label_col": [
      "satscores.sname",
      "frpm.Charter Funding Type",
      "satscores.cds",
      "frpm.CDSCode",
      "frpm.District Name",
      "satscores.AvgScrMath"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "State the names and full communication address of high schools in Monterey which has more than 800 free or reduced price meals for ages 15-17?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "schools"],
    "label_col": [
      "frpm.School Name",
      "schools.Zip",
      "schools.Street",
      "schools.City",
      "schools.State",
      "frpm.CDSCode",
      "schools.CDSCode",
      "schools.County",
      "frpm.Free Meal Count (Ages 5-17)",
      "frpm.School Type"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the average score in writing for the schools that were opened after 1991 or closed before 2000? List the school names along with the score. Also, list the communication number of the schools if there is any.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools", "satscores"],
    "label_col": [
      "schools.School",
      "satscores.AvgScrWrite",
      "schools.Phone",
      "schools.OpenDate",
      "schools.ClosedDate",
      "schools.CDSCode",
      "satscores.cds"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "schools"],
    "label_col": [
      "schools.School",
      "schools.DOC",
      "frpm.CDSCode",
      "schools.CDSCode",
      "schools.FundingType",
      "frpm.Enrollment (K-12)",
      "frpm.Enrollment (Ages 5-17)"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "When did the first-through-twelfth-grade school with the largest enrollment open?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "schools"],
    "label_col": [
      "schools.OpenDate",
      "frpm.CDSCode",
      "schools.CDSCode",
      "frpm.Enrollment (K-12)"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "Which cities have the top 5 lowest enrollment number for students in grades 1 through 12?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "schools"],
    "label_col": [
      "schools.City",
      "frpm.CDSCode",
      "schools.CDSCode",
      "frpm.Enrollment (K-12)"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the eligible free or reduced price meal rate for the top 5 schools in grades 1-12 with the highest free or reduced price meal count of the schools with the ownership code 66?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "schools"],
    "label_col": [
      "frpm.FRPM Count (K-12)",
      "frpm.CDSCode",
      "schools.CDSCode",
      "schools.SOC"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "If there are any, what are the websites address of the schools with a free meal count of 1,900-2,000 to students aged 5-17? Include the name of the school.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "schools"],
    "label_col": [
      "schools.Website",
      "frpm.School Name",
      "frpm.CDSCode",
      "schools.CDSCode",
      "frpm.Free Meal Count (Ages 5-17)"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the free rate for students between the ages of 5 and 17 at the school run by Kacey Gibson?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["schools", "frpm"],
    "label_col": [
      "frpm.Free Meal Count (Ages 5-17)",
      "schools.CDSCode",
      "frpm.CDSCode",
      "schools.AdmFName1",
      "schools.AdmLName1"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the administrator's email address of the chartered school with the fewest students enrolled in grades 1 through 12?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "schools"],
    "label_col": [
      "schools.AdmEmail1",
      "frpm.CDSCode",
      "schools.CDSCode",
      "frpm.Charter School (Y/N)",
      "frpm.Enrollment (K-12)"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "Under whose administration does the school with the highest number of test takers whose total SAT Scores are greater or equal to 1500 belong to? Indicate his or her full name.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["satscores", "schools"],
    "label_col": [
      "schools.AdmFName1",
      "schools.AdmLName1",
      "schools.AdmFName2",
      "schools.AdmLName2",
      "schools.AdmFName3",
      "schools.AdmLName3",
      "satscores.cds",
      "schools.CDSCode",
      "satscores.NumGE1500"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the complete address of the school with the lowest excellence rate? Indicate the Street, City, Zip and State.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["satscores", "schools"],
    "label_col": [
      "schools.Street",
      "schools.City",
      "schools.Zip",
      "schools.State",
      "satscores.cds",
      "schools.CDSCode",
      "satscores.NumGE1500",
      "satscores.NumTstTakr"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What are the webpages for the Los Angeles County school that has between 2,000 and 3,000 test takers?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["satscores", "schools"],
    "label_col": [
      "schools.Website",
      "satscores.cds",
      "schools.CDSCode",
      "satscores.NumTstTakr",
      "schools.County"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the average number of test takers from Fresno schools that opened between 1/1/1980 and 12/31/1980?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["satscores", "schools"],
    "label_col": [
      "satscores.NumTstTakr",
      "satscores.cds",
      "schools.CDSCode",
      "schools.OpenDate",
      "schools.County"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the telephone number for the school with the lowest average score in reading in Fresno Unified?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["satscores", "schools"],
    "label_col": [
      "schools.Phone",
      "satscores.cds",
      "schools.CDSCode",
      "schools.District",
      "satscores.AvgScrRead"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "Which exclusively virtual schools have the top 5 highest average reading scores?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["satscores", "schools"],
    "label_col": [
      "schools.School",
      "satscores.cds",
      "schools.CDSCode",
      "schools.Virtual",
      "satscores.AvgScrRead"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the type of education offered in the school who scored the highest average in Math?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["satscores", "schools"],
    "label_col": [
      "schools.EdOpsName",
      "satscores.cds",
      "schools.CDSCode",
      "satscores.AvgScrMath"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the average math score of the school with the lowest average score for all subjects, and in which county is it located?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["satscores", "schools"],
    "label_col": [
      "satscores.AvgScrMath",
      "schools.County",
      "satscores.cds",
      "schools.CDSCode",
      "satscores.AvgScrRead",
      "satscores.AvgScrWrite"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the average writing score of the school who has the highest number of test takers whose total SAT sscores are greater or equal to 1500? Indicate the city to where the school is situated.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["satscores", "schools"],
    "label_col": [
      "satscores.AvgScrWrite",
      "schools.City",
      "satscores.cds",
      "schools.CDSCode",
      "satscores.NumGE1500"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the average writing score of each of the schools managed by Ricci Ulrich? List the schools and the corresponding average writing scores.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["satscores", "schools"],
    "label_col": [
      "schools.School",
      "satscores.AvgScrWrite",
      "satscores.cds",
      "schools.CDSCode",
      "schools.AdmFName1",
      "schools.AdmLName1"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "Which state special schools have the highest number of enrollees from grades 1 through 12?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "schools"],
    "label_col": [
      "schools.School",
      "frpm.CDSCode",
      "schools.CDSCode",
      "schools.DOC",
      "frpm.Enrollment (K-12)"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the postal street address for the school with the 6th highest Math average? Indicate the school's name.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["satscores", "schools"],
    "label_col": [
      "schools.MailStreet",
      "schools.School",
      "satscores.cds",
      "schools.CDSCode",
      "satscores.AvgScrMath"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "In which mailing street address can you find the school that has the lowest average score in reading? Also give the school's name.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["satscores", "schools"],
    "label_col": [
      "schools.MailStreet",
      "schools.School",
      "satscores.cds",
      "schools.CDSCode",
      "satscores.AvgScrRead"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the total number of schools whose total SAT scores are greater or equal to 1500 whose mailing city is Lakeport?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["satscores", "schools"],
    "label_col": [
      "satscores.cds",
      "schools.CDSCode",
      "schools.MailCity",
      "satscores.AvgScrRead",
      "satscores.AvgScrMath",
      "satscores.AvgScrWrite"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "How many test takers are there at the school/s whose mailing city address is in Fresno?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["satscores", "schools"],
    "label_col": [
      "satscores.NumTstTakr",
      "satscores.cds",
      "schools.CDSCode",
      "schools.MailCity"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the phone number and extension number for the school that had the 333rd highest average writing score?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["satscores", "schools"],
    "label_col": [
      "schools.Phone",
      "schools.Ext",
      "satscores.cds",
      "schools.CDSCode",
      "satscores.AvgScrWrite"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "schools"],
    "label_col": [
      "schools.School",
      "frpm.CDSCode",
      "schools.CDSCode",
      "schools.County",
      "schools.Charter",
      "frpm.Free Meal Count (K-12)",
      "frpm.Enrollment (K-12)"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the district code for the School that does not offer a magnet program in the city of Fresno?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "schools"],
    "label_col": [
      "frpm.District Code",
      "frpm.CDSCode",
      "schools.CDSCode",
      "schools.City",
      "schools.Magnet"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "How many students from the ages of 5 to 17 are enrolled at the State Special School school in Fremont for the 2014-2015 academic year?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "schools"],
    "label_col": [
      "frpm.Enrollment (Ages 5-17)",
      "frpm.CDSCode",
      "schools.CDSCode",
      "schools.EdOpsCode",
      "schools.City",
      "frpm.Academic Year"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the free or reduced price meal count for ages 5 to 17 in the Youth Authority School with a mailing street address of PO Box 1040?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "schools"],
    "label_col": [
      "frpm.FRPM Count (Ages 5-17)",
      "frpm.CDSCode",
      "schools.CDSCode",
      "schools.MailStreet",
      "schools.SOCType"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the lowest grade for the District Special Education Consortia School with National Center for Educational Statistics school district identification number of 613360?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "schools"],
    "label_col": [
      "frpm.Low Grade",
      "frpm.CDSCode",
      "schools.CDSCode",
      "schools.NCESDist",
      "schools.EdOpsCode"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the educational level name for the schools with Breakfast Provision 2 in county code 37? Indicate the name of the school.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "schools"],
    "label_col": [
      "schools.EILName",
      "schools.School",
      "frpm.CDSCode",
      "schools.CDSCode",
      "frpm.NSLP Provision Status",
      "frpm.County Code"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the city location of the high school level school with Lunch Provision 2 whose lowest grade is 9 and the highest grade is 12 in the county of Merced?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "schools"],
    "label_col": [
      "schools.City",
      "frpm.CDSCode",
      "schools.CDSCode",
      "frpm.NSLP Provision Status",
      "schools.County",
      "frpm.Low Grade",
      "frpm.High Grade",
      "schools.EILCode"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "Which schools served a grade span of Kindergarten to 9th grade in the county of Los Angeles and what is its Percent (%) Eligible FRPM (Ages 5-17)?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "schools"],
    "label_col": [
      "schools.School",
      "frpm.FRPM Count (Ages 5-17)",
      "frpm.CDSCode",
      "schools.CDSCode",
      "schools.County",
      "schools.GSserved"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the school type of the school with the highest latitude? Indicate the name of the school as well as the latitude coordinates.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "schools"],
    "label_col": [
      "frpm.School Type",
      "frpm.School Name",
      "schools.Latitude",
      "frpm.CDSCode",
      "schools.CDSCode"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "In which city can you find the school in the state of California with the lowest latitude coordinates and what is its lowest grade? Indicate the school name.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "schools"],
    "label_col": [
      "schools.City",
      "frpm.Low Grade",
      "frpm.School Name",
      "frpm.CDSCode",
      "schools.CDSCode",
      "schools.State",
      "schools.Latitude"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "schools"],
    "label_col": [
      "schools.City",
      "schools.CDSCode",
      "frpm.CDSCode",
      "schools.Magnet",
      "schools.GSoffered",
      "frpm.NSLP Provision Status"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the Percent (%) Eligible Free (K-12) in the school administered by an administrator whose first name is Alusine. List the district code of the school.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "schools"],
    "label_col": [
      "frpm.Free Meal Count (K-12)",
      "frpm.District Code",
      "frpm.CDSCode",
      "schools.CDSCode",
      "schools.AdmFName1"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the e-mail address of the administrator of the school located in the San Bernardino county, District of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Scools?",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["frpm", "schools"],
    "label_col": [
      "schools.AdmEmail1",
      "frpm.CDSCode",
      "schools.CDSCode",
      "schools.County",
      "schools.City",
      "schools.DOC",
      "schools.OpenDate",
      "schools.SOC"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "What is the administrator's email address for the school with the highest number of test takers who received SAT scores of at least 1500?Provide the name of the school.",
    "table_infos": "/*\nDetails about the 'frpm' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170109835, 1100170112607, 1100170118489]\n- 'Academic Year' object,  Example Values: ['2014-2015']\n- 'County Code' int64,  Example Values: [1]\n- 'District Code' int64,  Example Values: [10017]\n- 'School Code' int64,  Example Values: [109835, 112607, 118489]\n- 'County Name' object,  Example Values: ['Alameda']\n- 'District Name' object,  Example Values: ['Alameda County Office of Education']\n- 'School Name' object, is unique,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology', 'Aspire California College Preparatory Ac....']\n- 'District Type' object,  Example Values: ['County Office of Education (COE)']\n- 'School Type' object,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'Educational Option Type' object,  Example Values: ['Traditional']\n- 'NSLP Provision Status' float64, contains NaN,  Example Values: []\n- 'Charter School (Y/N)' float64,  Example Values: [1.0]\n- 'Charter School Number' int64,  Example Values: [728, 811, 1049]\n- 'Charter Funding Type' object,  Example Values: ['Directly funded']\n- 'IRC' float64,  Example Values: [1.0]\n- 'Low Grade' object,  Example Values: ['K', '9']\n- 'High Grade' int64,  Example Values: [12]\n- 'Enrollment (K-12)' float64,  Example Values: [1087.0, 395.0, 244.0]\n- 'Free Meal Count (K-12)' float64,  Example Values: [565.0, 186.0, 134.0]\n- 'Percent (%) Eligible Free (K-12)' float64,  Example Values: [0.519779208831647, 0.470886075949367, 0.549180327868853]\n- 'FRPM Count (K-12)' float64,  Example Values: [715.0, 186.0, 175.0]\n- 'Percent (%) Eligible FRPM (K-12)' float64,  Example Values: [0.657773689052438, 0.470886075949367, 0.717213114754098]\n- 'Enrollment (Ages 5-17)' float64,  Example Values: [1070.0, 376.0, 230.0]\n- 'Free Meal Count (Ages 5-17)' float64,  Example Values: [553.0, 182.0, 128.0]\n- 'Percent (%) Eligible Free (Ages 5-17)' float64,  Example Values: [0.516822429906542, 0.484042553191489, 0.556521739130435]\n- 'FRPM Count (Ages 5-17)' float64,  Example Values: [702.0, 182.0, 168.0]\n- 'Percent (%) Eligible FRPM (Ages 5-17)' float64,  Example Values: [0.65607476635514, 0.484042553191489, 0.730434782608696]\n- '2013-14 CALPADS Fall 1 Certification Status' int64,  Example Values: [1]\n*/\n\n/*\nDetails about the 'satscores' dataframe that can be used as follows:\n- 'cds' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'rtype' object,  Example Values: ['D', 'S']\n- 'sname' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'dname' object,  Example Values: ['Alameda County Office of Education']\n- 'cname' object,  Example Values: ['Alameda']\n- 'enroll12' int64,  Example Values: [398, 62, 75]\n- 'NumTstTakr' int64,  Example Values: [88, 17, 71]\n- 'AvgScrRead' float64,  Example Values: [418.0, 503.0, 397.0]\n- 'AvgScrMath' float64,  Example Values: [418.0, 546.0, 387.0]\n- 'AvgScrWrite' float64,  Example Values: [417.0, 505.0, 395.0]\n- 'NumGE1500' float64,  Example Values: [14.0, 9.0, 5.0]\n*/\n\n/*\nDetails about the 'schools' dataframe that can be used as follows:\n- 'CDSCode' int64,  Example Values: [1100170000000, 1100170109835, 1100170112607]\n- 'NCESDist' int64,  Example Values: [691051]\n- 'NCESSchool' float64, contains NaN,  Example Values: [10546.0, 10947.0]\n- 'StatusType' object,  Example Values: ['Active', 'Closed']\n- 'County' object,  Example Values: ['Alameda']\n- 'District' object,  Example Values: ['Alameda County Office of Education']\n- 'School' object, contains NaN,  Example Values: ['FAME Public Charter', 'Envision Academy for Arts & Technology']\n- 'Street' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'StreetAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'City' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'Zip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612-3355']\n- 'State' object,  Example Values: ['CA']\n- 'MailStreet' object, is unique,  Example Values: ['313 West Winton Avenue', '39899 Balentine Drive, Suite 335', '1515 Webster Street']\n- 'MailStrAbr' object, is unique,  Example Values: ['313 West Winton Ave.', '39899 Balentine Dr., Ste. 335', '1515 Webster St.']\n- 'MailCity' object, is unique,  Example Values: ['Hayward', 'Newark', 'Oakland']\n- 'MailZip' object, is unique,  Example Values: ['94544-1136', '94560-5359', '94612']\n- 'MailState' object,  Example Values: ['CA']\n- 'Phone' object, contains NaN,  Example Values: ['(510) 887-0152', '(510) 596-8901']\n- 'Ext' float64, contains NaN,  Example Values: []\n- 'Website' object, contains NaN,  Example Values: ['www.acoe.org', 'www.envisionacademy.org/']\n- 'OpenDate' object, contains NaN,  Example Values: ['2005-08-29', '2006-08-28']\n- 'ClosedDate' object, contains NaN,  Example Values: ['2015-07-31']\n- 'Charter' float64, contains NaN,  Example Values: [1.0]\n- 'CharterNum' float64, contains NaN,  Example Values: [728.0, 811.0]\n- 'FundingType' object, contains NaN,  Example Values: ['Directly funded']\n- 'DOC' int64,  Example Values: [0]\n- 'DOCType' object,  Example Values: ['County Office of Education (COE)']\n- 'SOC' float64, contains NaN,  Example Values: [65.0, 66.0]\n- 'SOCType' object, contains NaN,  Example Values: ['K-12 Schools (Public)', 'High Schools (Public)']\n- 'EdOpsCode' object, contains NaN,  Example Values: ['TRAD']\n- 'EdOpsName' object, contains NaN,  Example Values: ['Traditional']\n- 'EILCode' object, contains NaN,  Example Values: ['ELEMHIGH', 'HS']\n- 'EILName' object, contains NaN,  Example Values: ['Elementary-High Combination', 'High School']\n- 'GSoffered' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'GSserved' object, contains NaN,  Example Values: ['K-12', '9-12']\n- 'Virtual' object, contains NaN,  Example Values: ['P', 'N']\n- 'Magnet' float64, contains NaN,  Example Values: [0.0]\n- 'Latitude' float64,  Example Values: [37.658212, 37.521436, 37.80452]\n- 'Longitude' float64,  Example Values: [-122.09713, -121.99391, -122.26815]\n- 'AdmFName1' object, contains NaN,  Example Values: ['L Karen', 'Laura']\n- 'AdmLName1' object, contains NaN,  Example Values: ['Monroe', 'Robell']\n- 'AdmEmail1' object, contains NaN,  Example Values: ['lkmonroe@acoe.org', 'laura@envisionacademy.org']\n- 'AdmFName2' float64, contains NaN,  Example Values: []\n- 'AdmLName2' float64, contains NaN,  Example Values: []\n- 'AdmEmail2' float64, contains NaN,  Example Values: []\n- 'AdmFName3' float64, contains NaN,  Example Values: []\n- 'AdmLName3' float64, contains NaN,  Example Values: []\n- 'AdmEmail3' float64, contains NaN,  Example Values: []\n- 'LastUpdate' object, is unique,  Example Values: ['2015-06-23', '2015-09-01', '2015-06-18']\n*/\n\nForeign keys:\nfrpm.CDSCode=schools.CDSCode,satscores.cds=schools.CDSCode\n",
    "label_table": ["satscores", "schools"],
    "label_col": [
      "schools.AdmEmail1",
      "schools.School",
      "satscores.cds",
      "schools.CDSCode",
      "satscores.NumGE1500"
    ],
    "table_paths": [
      "datasets/BIRD_dev-california_schools/schools.csv",
      "datasets/BIRD_dev-california_schools/satscores.csv",
      "datasets/BIRD_dev-california_schools/frpm.csv"
    ],
    "df_names": ["schools", "satscores", "frpm"]
  },
  {
    "query": "How many accounts who choose issuance after transaction are staying in East Bohemia region?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["district", "account"],
    "label_col": [
      "district.district_id",
      "account.district_id",
      "district.A3",
      "account.frequency"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "How many accounts who have region in Prague are eligible for loans?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["account", "loan", "district"],
    "label_col": [
      "account.account_id",
      "loan.account_id",
      "account.district_id",
      "district.district_id",
      "district.A3"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "List out the no. of districts that have female average salary is more than 6000 but less than 10000?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["client", "district"],
    "label_col": [
      "district.district_id",
      "client.district_id",
      "client.gender",
      "district.A11"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "How many male customers who are living in North Bohemia have average salary greater than 8000?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["client", "district"],
    "label_col": [
      "client.client_id",
      "client.district_id",
      "district.district_id",
      "client.gender",
      "district.A3",
      "district.A11"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "How many customers who choose statement of weekly issuance are Owner?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["account", "disp"],
    "label_col": [
      "account.account_id",
      "disp.account_id",
      "disp.type",
      "account.frequency"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "List out the clients who choose statement of issuance after transaction are Disponent?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["account", "disp"],
    "label_col": [
      "disp.client_id",
      "account.account_id",
      "disp.account_id",
      "account.frequency",
      "disp.type"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "Among the accounts who have approved loan date in 1997, list out the accounts that have the lowest approved amount and choose weekly issuance statement.",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["loan", "account"],
    "label_col": [
      "account.account_id",
      "loan.account_id",
      "loan.date",
      "account.frequency",
      "loan.amount"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "Among the accounts who have loan validity more than 12 months, list out the accounts that have the highest approved amount and have account opening date in 1993.",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["loan", "disp"],
    "label_col": [
      "loan.account_id",
      "disp.account_id",
      "loan.date",
      "loan.duration",
      "loan.amount"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "Among the account opened, how many female customers who were born before 1950 and stayed in Slokolov?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["district", "client"],
    "label_col": [
      "client.client_id",
      "district.district_id",
      "client.district_id",
      "client.gender",
      "client.birth_date",
      "district.A2"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "State different accounts who have account opening date before 1997 and own an amount of money greater than 3000USD",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["trans", "account"],
    "label_col": [
      "account.account_id",
      "trans.account_id",
      "account.date",
      "trans.amount"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "Which client issued his/her card in 1994/3/3, give his/her client id.",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["client", "disp", "card"],
    "label_col": [
      "disp.client_id",
      "client.client_id",
      "disp.disp_id",
      "card.disp_id",
      "card.issued"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "The transaction of 840 USD happened in 1998/10/14, when was this account opened?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["account", "trans"],
    "label_col": [
      "account.date",
      "account.account_id",
      "trans.account_id",
      "trans.amount",
      "trans.date"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "There was a loan approved in 1994/8/25, where was that account opened, give the district Id of the branch.",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["account", "loan"],
    "label_col": [
      "account.district_id",
      "account.account_id",
      "loan.account_id",
      "loan.date"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "What is the biggest amount of transaction that the client whose card was opened in 1996/10/21 made?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["account", "trans"],
    "label_col": [
      "trans.amount",
      "account.account_id",
      "trans.account_id",
      "account.date"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "What is the gender of the oldest client who opened his/her account in the highest average salary branch?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["district", "client"],
    "label_col": [
      "client.gender",
      "district.district_id",
      "client.district_id",
      "district.A11",
      "client.birth_date"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "For the client who applied the biggest loan, what was his/her first amount of transaction after opened the account?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["loan", "trans"],
    "label_col": [
      "trans.amount",
      "loan.account_id",
      "trans.account_id",
      "loan.amount",
      "trans.date"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "How many clients opened their accounts in Jesenik branch were women?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["client", "district"],
    "label_col": [
      "client.client_id",
      "client.district_id",
      "district.district_id",
      "client.gender",
      "district.A2"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "What is the disposition id of the client who made 5100 USD transaction in 1998/9/2?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["disp", "trans"],
    "label_col": [
      "disp.disp_id",
      "disp.account_id",
      "trans.account_id",
      "trans.date",
      "trans.amount"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "How many accounts were opened in Litomerice in 1996?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["district", "account"],
    "label_col": [
      "account.account_id",
      "district.district_id",
      "account.district_id",
      "account.date",
      "district.A2"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "For the female client who was born in 1976/1/29, which district did she opened her account?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["district", "client"],
    "label_col": [
      "district.A2",
      "district.district_id",
      "client.district_id",
      "client.birth_date",
      "client.gender"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "For the client who applied 98832 USD loan in 1996/1/3, when was his/her birthday?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["loan", "account", "client"],
    "label_col": [
      "client.birth_date",
      "loan.account_id",
      "account.account_id",
      "account.district_id",
      "client.district_id",
      "loan.date",
      "loan.amount"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "For the first client who opened his/her account in Prague, what is his/her account ID?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["account", "district"],
    "label_col": [
      "account.account_id",
      "account.district_id",
      "district.district_id",
      "district.A3",
      "account.date"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["client", "district"],
    "label_col": [
      "client.gender",
      "client.client_id",
      "client.district_id",
      "district.district_id",
      "district.A3",
      "district.A4"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "For the client who first applied the loan in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["loan", "account", "trans"],
    "label_col": [
      "trans.date",
      "trans.balance",
      "loan.account_id",
      "account.account_id",
      "trans.account_id",
      "loan.date"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "For accounts in 1993 with statement issued after transaction, list the account ID, district name and district region.",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["account", "district"],
    "label_col": [
      "account.account_id",
      "district.A2",
      "district.A3",
      "account.district_id",
      "district.district_id",
      "account.frequency",
      "account.date"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "From Year 1995 to 2000, who are the accounts holders from 'east Bohemia'. State the account ID the frequency of statement issuance.",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["account", "district"],
    "label_col": [
      "account.account_id",
      "account.frequency",
      "account.district_id",
      "district.district_id",
      "district.A3",
      "account.date"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "List account ID and account opening date for accounts from 'Prachatice'.",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["account", "district"],
    "label_col": [
      "account.account_id",
      "account.date",
      "account.district_id",
      "district.district_id",
      "district.A2"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "State the district and region for loan ID '4990'.",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["account", "district", "loan"],
    "label_col": [
      "district.A2",
      "district.A3",
      "account.district_id",
      "district.district_id",
      "account.account_id",
      "loan.account_id",
      "loan.loan_id"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "Provide the account ID, district and region for loan amount greater than USD300,000.",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["account", "district", "loan"],
    "label_col": [
      "account.account_id",
      "district.A2",
      "district.A3",
      "account.district_id",
      "district.district_id",
      "loan.account_id",
      "loan.amount"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "List the loan ID, district and average salary for loan with duration of 60 months.",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["account", "district", "loan"],
    "label_col": [
      "loan.loan_id",
      "district.A2",
      "district.A11",
      "account.district_id",
      "district.district_id",
      "account.account_id",
      "loan.account_id",
      "loan.duration"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996.",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["loan", "account", "district"],
    "label_col": [
      "district.A13",
      "district.A12",
      "loan.account_id",
      "account.account_id",
      "account.district_id",
      "district.district_id",
      "loan.status"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "List the top ten districts, by descending order, from the highest to the lowest, the number of female account holders.",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["client", "district"],
    "label_col": [
      "district.A2",
      "client.client_id",
      "client.district_id",
      "district.district_id",
      "client.gender"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "How many of the account holders in South Bohemia still do not own credit cards?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["district", "client", "disp"],
    "label_col": [
      "disp.account_id",
      "district.district_id",
      "client.district_id",
      "client.client_id",
      "disp.client_id",
      "district.A3",
      "disp.type"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "Which district has highest active loan?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["account", "district", "loan"],
    "label_col": [
      "district.A3",
      "account.district_id",
      "district.district_id",
      "account.account_id",
      "loan.account_id",
      "loan.status",
      "loan.amount"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "What is the average loan amount by male borrowers?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["client", "account", "loan"],
    "label_col": [
      "loan.amount",
      "client.district_id",
      "account.district_id",
      "account.account_id",
      "loan.account_id",
      "client.gender"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "In the branch where the largest number of crimes were committed in 1996, how many accounts were opened?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["district", "account"],
    "label_col": [
      "account.account_id",
      "district.district_id",
      "account.district_id",
      "district.A16"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "After making a credit card withdrawal, how many account/s with monthly issuance has a negative balance?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["trans", "account"],
    "label_col": [
      "trans.account_id",
      "account.account_id",
      "trans.balance",
      "trans.operation",
      "account.frequency"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "Between 1/1/1995 and 12/31/1997, how many loans in the amount of at least 250,000 per account that chose monthly statement issuance were approved?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["account", "loan"],
    "label_col": [
      "account.account_id",
      "loan.account_id",
      "loan.date",
      "account.frequency",
      "loan.amount"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "How many accounts have running contracts in Branch location 1?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["account", "district", "loan"],
    "label_col": [
      "account.account_id",
      "account.district_id",
      "district.district_id",
      "loan.account_id",
      "loan.status"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  },
  {
    "query": "In the branch where the second-highest number of crimes were committed in 1995 occurred, how many male clients are there?",
    "table_infos": "/*\nDetails about the 'account' dataframe that can be used as follows:\n- 'account_id' int64,  Example Values: [1, 2, 3]\n- 'district_id' int64,  Example Values: [18, 1, 5]\n- 'frequency' object,  Example Values: ['POPLATEK MESICNE']\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1993-02-26', '1997-07-07']\n*/\n\n/*\nDetails about the 'card' dataframe that can be used as follows:\n- 'card_id' int64,  Example Values: [1, 2, 3]\n- 'disp_id' int64,  Example Values: [9, 19, 41]\n- 'type' object,  Example Values: ['gold', 'classic']\n- 'issued' object, is unique,  Example Values: ['1998-10-16', '1998-03-13', '1995-09-03']\n*/\n\n/*\nDetails about the 'client' dataframe that can be used as follows:\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'gender' object,  Example Values: ['F', 'M']\n- 'birth_date' object, is unique,  Example Values: ['1970-12-13', '1945-02-04', '1940-10-09']\n- 'district_id' int64,  Example Values: [18, 1]\n*/\n\n/*\nDetails about the 'disp' dataframe that can be used as follows:\n- 'disp_id' int64,  Example Values: [1, 2, 3]\n- 'client_id' int64,  Example Values: [1, 2, 3]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'type' object,  Example Values: ['OWNER', 'DISPONENT']\n*/\n\n/*\nDetails about the 'district' dataframe that can be used as follows:\n- 'district_id' int64,  Example Values: [1, 2, 3]\n- 'A2' object, is unique,  Example Values: ['Hl.m. Praha', 'Benesov', 'Beroun']\n- 'A3' object,  Example Values: ['Prague', 'central Bohemia']\n- 'A4' int64,  Example Values: [1204953, 88884, 75232]\n- 'A5' int64,  Example Values: [0, 80, 55]\n- 'A6' int64,  Example Values: [0, 26]\n- 'A7' int64,  Example Values: [0, 6, 4]\n- 'A8' int64,  Example Values: [1, 2]\n- 'A9' int64,  Example Values: [1, 5]\n- 'A10' float64,  Example Values: [100.0, 46.7, 41.7]\n- 'A11' int64,  Example Values: [12541, 8507, 8980]\n- 'A12' float64,  Example Values: [0.2, 1.6, 1.9]\n- 'A13' float64,  Example Values: [0.43, 1.85, 2.21]\n- 'A14' int64,  Example Values: [167, 132, 111]\n- 'A15' float64,  Example Values: [85677.0, 2159.0, 2824.0]\n- 'A16' int64,  Example Values: [99107, 2674, 2813]\n*/\n\n/*\nDetails about the 'loan' dataframe that can be used as follows:\n- 'loan_id' int64,  Example Values: [4959, 4961, 4962]\n- 'account_id' int64,  Example Values: [2, 19, 25]\n- 'date' object, is unique,  Example Values: ['1994-01-05', '1996-04-29', '1997-12-08']\n- 'amount' int64,  Example Values: [80952, 30276]\n- 'duration' int64,  Example Values: [24, 12]\n- 'payments' float64,  Example Values: [3373.0, 2523.0]\n- 'status' object,  Example Values: ['A', 'B']\n*/\n\n/*\nDetails about the 'order' dataframe that can be used as follows:\n- 'order_id' int64,  Example Values: [29401, 29402, 29403]\n- 'account_id' int64,  Example Values: [1, 2]\n- 'bank_to' object, is unique,  Example Values: ['YZ', 'ST', 'QR']\n- 'account_to' int64,  Example Values: [87144583, 89597016, 13943797]\n- 'amount' float64,  Example Values: [2452.0, 3372.7, 7266.0]\n- 'k_symbol' object,  Example Values: ['SIPO', 'UVER']\n*/\n\n/*\nDetails about the 'trans' dataframe that can be used as follows:\n- 'trans_id' int64,  Example Values: [1, 5, 6]\n- 'account_id' int64,  Example Values: [1]\n- 'date' object, is unique,  Example Values: ['1995-03-24', '1995-04-13', '1995-05-13']\n- 'type' object,  Example Values: ['PRIJEM']\n- 'operation' object,  Example Values: ['VKLAD', 'PREVOD Z UCTU']\n- 'amount' int64,  Example Values: [1000, 3679]\n- 'balance' int64,  Example Values: [1000, 4679, 20977]\n- 'k_symbol' float64, contains NaN,  Example Values: []\n- 'bank' object, contains NaN,  Example Values: ['AB']\n- 'account' float64, contains NaN,  Example Values: [41403269.0]\n*/\n\nForeign keys:\naccount.location of branch=district.location of branch,card.disposition id=disp.disposition id,client.location of branch=district.location of branch,disp.client_id=client.client_id,disp.account_id=account.account id,loan.account_id=account.account id,order.account_id=account.account id,trans.account_id=account.account id\n",
    "label_table": ["client", "district"],
    "label_col": [
      "client.client_id",
      "client.district_id",
      "district.district_id",
      "client.gender",
      "district.A15"
    ],
    "table_paths": [
      "datasets/BIRD_dev-financial/loan.csv",
      "datasets/BIRD_dev-financial/client.csv",
      "datasets/BIRD_dev-financial/district.csv",
      "datasets/BIRD_dev-financial/trans.csv",
      "datasets/BIRD_dev-financial/account.csv",
      "datasets/BIRD_dev-financial/card.csv",
      "datasets/BIRD_dev-financial/order.csv",
      "datasets/BIRD_dev-financial/disp.csv"
    ],
    "df_names": [
      "loan",
      "client",
      "district",
      "trans",
      "account",
      "card",
      "order",
      "disp"
    ]
  }
]
